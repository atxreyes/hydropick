#
# Copyright (c) 2014, Texas Water Development Board
# All rights reserved.
#
# This code is open-source. See LICENSE file for details.
#

from __future__ import absolute_import

from shapely.geometry import LineString

from traits.api import (Interface, Array, Dict, Event, Instance, List,
                        Supports, CFloat, Str)

from .i_core_sample import ICoreSample
from .i_depth_line import IDepthLine


class ISurveyLine(Interface):
    """ A class representing a single survey line """

    #: the user-visible name for the line
    name = Str

    #: file location for this surveyline.  Used to load data when needed.
    data_file_path = Str

    #: sample locations, an Nx2 array (example: easting/northing?)
    locations = Array(shape=(None, 2))

    #: specifies unit for values in locations array
    locations_unit = Str

    #: array of associated lat/long available for display
    lat_long = Array(shape=(None, 2))

    #: a dictionary mapping frequencies to intensity arrays
    frequencies = Dict

    #: array of trace numbers corresponding to each intensity pixel columns
    freq_trace_num = Dict

    #: complete trace_num set. array = combined freq_trace_num arrays
    trace_num = Array

    #: relevant core samples
    core_samples = List(Supports(ICoreSample))

    #: depth of the lake at each location as generated by various soruces
    lake_depths = Dict(Str, Supports(IDepthLine))

    #: final choice for line used as current lake depth for volume calculations
    final_lake_depth = Instance(IDepthLine)

    # and event fired when the lake depths are updated
    lake_depths_updated = Event

    #: The navigation track of the survey line in map coordinates
    navigation_line = Instance(LineString)

    #: pre-impoundment depth at each location as generated by various soruces
    preimpoundment_depths = Dict(Str, Supports(IDepthLine))

    #: final choice for pre-impoundment depth to track sedimentation
    final_pre_imp_depth = Instance(IDepthLine)

    # and event fired when the lake depth is updated
    preimpoundment_depths_updated = Event

    # power values for entire trace set
    power = Array

    # gain values for entire trace set
    gain = Array

    ##: Depth corrections:
    ##:     depth = (pixel_number_from_top * pixel_resolution) + draft - heave

    #: distance from sensor to water. Constant offset added to depth
    draft = CFloat

    #: array of depth corrections to vertical offset of each column (waves etc)
    heave = Array

    #: pixel resolution, depth/pixel
    pixel_resolution = CFloat

    # XXX probably other metadata should be here
