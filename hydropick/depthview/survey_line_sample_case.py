#
# Copyright (c) 2014, Texas Water Development Board
# All rights reserved.
#
# This code is open-source. See LICENSE file for details.
#

from __future__ import absolute_import

import numpy as np

from traits.api import HasTraits, Array, Dict, Event, List, Supports, Str, \
                       provides, Float

from hydropick.model.i_core_sample import ICoreSample
from hydropick.model.i_survey_line import ISurveyLine

from sdi import binary
from hydropick.model.survey_line import SurveyLine

EXAMPLE_SDI_FILE = 'sdi/06081001.bin'

def load_sdi_dict(filepath):
    ''' read in data file the sdi read().
    '''
    path = filepath or EXAMPLE_SDI_FILE
    survey_dict = binary.read(path)
    print 'loaded default sample data :', path
    return survey_dict

#@provides(ISurveyLine)
class MySurveyLine(SurveyLine):
    """ A class representing a single survey line """

    ###### ADDED STUFF TO INITIALIZE INSTANCE ######

    # add dictionary read by sdi reader.  Used for initializing other traits
    _sdi_dict = Dict

    # add sdi file path to allow instantiation with a different file
    sdi_file_path = Str('')

    # add pixel depth scale in feet/pixel for vertical axis of images
    pixel_depth_scale = Float(.015)
    pixel_depth_offset = Float(0)
    #==========================================================================
    # Defaults
    #==========================================================================

    def __sdi_dict_default(self):
        ''' read in sdi file '''
        return load_sdi_dict(filepath=self.sdi_file_path)

    def _locations_default(self):
        ''' Set of arrays of locations of size Nx1 or Nx2
        provid
        '''
        N = len(self.lake_depths.values()[0])
        x = np.linspace(0,5000,N)
        y = np.linspace(0,5000,N)
        return np.vstack([x,y]).T

    def _frequencies_default(self):
        ''' a dictionary mapping frequencies to intensity arrays.
        Set frequencies to Str, and transpose so ready for img_plot
        '''
        newdict = {}
        freq_dict = self._sdi_dict['frequencies']
        for key in freq_dict:
            newdict[str(key)] = freq_dict[key]['intensity'].T

        return newdict

    def _core_samples_default(self):
        ''' relevant core samples'''
        return []
        # to be added later

    def _lake_depths_default(self):
        ''' Depth of the lake at each location, generated by various sources
        Initialize with the sdi lakedepth readings at each freq
        '''
        freq_dict = self._sdi_dict['frequencies']
        depthdict = {}
        for key in freq_dict:
            keystr = 'lakedepth_' + str(key)
            deptharray = freq_dict[key]['depth_r1']
            depthdict[keystr] = deptharray

        return depthdict

    def _preimpoundment_depths_default(self):
        ''' Pre-impoundment depth at each location, generated by various sources
        Start as empty for this example but in general may have previously added
        lines.
        '''
        return {}


if __name__ == '__main__':
    surveyline = MySurveyLine()
    print 'read file0'
    print surveyline._sdi_dict
    print '\n'
    print surveyline.sdi_file_path
    print surveyline.locations
    print surveyline.__dict__
